plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = "" + project.minecraft_version + "+" + project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://pluto-mod-maven.web.app/maven" }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://maven.quiltmc.org/repository/release" }
	maven { url "https://api.modrinth.com/maven" }
}

loom {
    
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(loom.layered {
		it.mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:intermediary-v2"
		it.parchment "org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip"
		it.officialMojangMappings { nameSyntheticMembers = false }
	})

	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	// modCompileOnly "maven.modrinth:dehydration:${project.dehydration_version}"
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"
}

processResources {
	inputs.property "version", mod_version

	filesMatching("fabric.mod.json") {
		expand "version": mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		maven {
			url = System.getenv("PUBLISH_LOCATION")
		}
	}

	publications {

		mavenJava(MavenPublication) {
			artifactId = 'pdapi'

			from(components.java)
			pom.withXml {
				Node pom = asNode()
				pom.dependencies.'*'.findAll() {
					it.artifactId.text() == 'dehydration' || it.artifactId.text() == 'modmenu'
				}.each() {
					it.parent().remove(it)
				}
			}
		}
	}
}
